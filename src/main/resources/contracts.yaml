swagger: "2.0"
info:
  description: "This is an API for money transfer"
  version: "1.0.0"
  title: "Money Transfer API"
  contact:
    email: "gellmark@gmail.com"
tags:
  - name: "account"
    description: "Operations regarding user bank accounts"
  - name: "transaction"
    description: "Operations regarding performed bank transfers"
  - name: "demo"
    description: "Operations that are implemented for demo purposes and probably shouldn't be a part of real API design"

schemes:
  - "http"
paths:
  /accounts:
    post:
      tags:
        - "account"
      summary: "Add new account to the system. "
      operationId: "addAccount"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "account details to be added. Note that ID field will be ignored (it's will be generated remotely)"
          required: true
          schema:
            $ref: "#/definitions/Account"
      responses:
        200:
          description: "successfully created account"
          schema:
            $ref: "#/definitions/Account"
        400:
          description: "Invalid account"
    get:
      tags:
        - "account"
      summary: "List all accounts in the system"
      operationId: "listAccounts"
      produces:
        - "application/json"
      responses:
        200:
          description: "successfully listed all accounts"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Account"


  /accounts/{accountId}:
    get:
      tags:
        - "account"
      summary: "Get specified account"
      operationId: "getAccount"
      produces:
        - "application/json"
      parameters:
        - name: "accountId"
          in: "path"
          description: "ID of account to return"
          required: true
          type: "string"
          format: "uuid"
      responses:
        200:
          description: "successfully fetched given account"
          schema:
            $ref: "#/definitions/Account"
        404:
          description: "invalid account UUID"
    delete:
      tags:
        - "account"
      summary: "Delete specified account"
      operationId: "deleteAccount"
      produces:
        - "application/json"
      parameters:
        - name: "accountId"
          in: "path"
          description: "ID of account to delete"
          required: true
          type: "string"
          format: "uuid"
      responses:
        200:
          description: "account that was deleted"
          schema:
            $ref: "#/definitions/Account"
        404:
          description: "invalid account UUID"

  /accounts/{accountId}/balance:
    get:
      tags:
        - "account"
        - "demo"
      summary: "Get balance of specified account"
      operationId: "getBalance"
      produces:
        - "application/json"
      parameters:
        - name: "accountId"
          in: "path"
          description: "ID of account to find balance at"
          required: true
          type: "string"
          format: "uuid"
      responses:
        200:
          description: "successfully fetched account balance"
          schema:
            $ref: "#/definitions/Balance"
        404:
          description: "invalid account UUID"
  /accounts/{accountId}/deposit:
    post:
      tags:
        - "account"
        - "demo"
      summary: "Deposit given amount to given account. This is demo api only"
      operationId: "deposit"
      parameters:
        - name: "accountId"
          in: "path"
          description: "ID of account to find balance at"
          required: true
          type: "string"
          format: "uuid"
        - in: "body"
          name: "body"
          description: "account details to be added"
          required: true
          schema:
            type: "object"
            properties:
              amount:
                type: "integer"
                multipleOf: 0.0001
                minimum: 0
                description: "String or number denoting amount to tarnsfer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Balance"
        404:
          description: "invalid account UUID"

  /accounts/{accountId}/withdraw:
    post:
      tags:
        - "account"
        - "demo"
      summary: "Deposit given amount to given account. This is demo api only"
      operationId: "withdraw"
      parameters:
        - name: "accountId"
          in: "path"
          description: "ID of account to find balance at"
          required: true
          type: "string"
          format: "uuid"
        - in: "body"
          name: "body"
          description: "account details to be added"
          required: true
          schema:
            type: "object"
            properties:
              amount:
                type: "integer"
                multipleOf: 0.0001
                minimum: 0
                description: "String or number denoting amount to tarnsfer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Balance"
        400:
          description: "insufficient funds"
        404:
          description: "invalid account UUID"

  /transactions:
    get:
      tags:
        - "transaction"
      summary: "List all transactions in the system"
      operationId: "listTransactions"
      produces:
        - "application/json"
      parameters:
        - name: "from"
          in: "query"
          type: "string"
          format: "uiud"
          description: "Id of account issuing transaction"
        - name: "to"
          in: "query"
          type: "string"
          format: "uuid"
          description: "Id of account receiving transactions"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transaction"
  /transactions/{transactionId}:
    get:
      tags:
        - "transaction"
      summary: "Get specified transaction"
      operationId: "getTransaction"
      produces:
        - "application/json"
      parameters:
        - name: "transactionId"
          in: "path"
          description: "ID of transaction to return"
          required: true
          type: "string"
          format: "uuid"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Transaction"
        404:
          description: "invalid transaction UUID"


  /transfer:
    post:
      tags:
        - "transaction"
      summary: "transfer money from one account to another"
      operationId: "transfer"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "transaction details"
          required: true
          schema:
            type: "object"
            properties:
              account_from:
                type: "string"
                format: "uuid"
                description: "account to transfer from"
              account_to:
                type: "string"
                format: "uuid"
                description: "account to transfer to"
              amount:
                type: "number"
                description: "amount to transfer"
      responses:
        200:
          description: "successfully created transaction. (Check status later)"
          schema:
            $ref: "#/definitions/Transaction"
        400:
          description: "Invalid transfer details"

definitions:
  Account:
    type: "object"
    properties:
      id:
        readOnly: true
        type: "string"
        format: "uuid"
      bank:
        type: "string"
        example: "ABNA"
      number:
        type: "string"
        example: "0123456789"
      user_id:
        type: "string"
        format: "uuid"
      currency:
        $ref: "#/definitions/Currency"
    required:
      - bank
      - number
      - user_id
  Transaction:
    type: "object"
    properties:
      id:
        readOnly: true
        type: "string"
        format: "uuid"
      account_from:
        type: "string"
        format: "uuid"
      account_to:
        type: "string"
        format: "uuid"
      amount:
        type: number
        multipleOf: 0.01
        minimum: 0
      currency:
        $ref: "#/definitions/Currency"
      created_at:
        readOnly: true
        type: "integer"
        example: "1561944155630"
      updated_at:
        readOnly: true
        type: "integer"
        example: "1561944155635"
      status:
        readOnly: true
        type: "string"
        enum:
          - PENDING
          - FAILED
          - SUCCESS
      error:
        readOnly: true
        type: string
        description: "error description in case of failed transaction"
    required:
      - account_from
      - account_to
      - amount
      - currency
  Currency:
    type: "string"
    description: "Supported currencies"
    enum:
      - USD
      - EUR
    default: USD
  Balance:
    type: "object"
    properties:
      balance:
        type: number
        multipleOf: 0.01
        description: "amount of money"
      currency:
        $ref: "#/definitions/Currency"
    required:
      - balance